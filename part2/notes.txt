- map creates new array
- elements generated by map need keys
- index as a key is an anti-pattern
- keys not necessarily defined in li elements, can
be defined in components that return li
<Note key={note.id} /> where Note returns li
- event.preventDefault() in event handlers prevent page reload
- event.target is which component triggered event
- Controlled Components, (ex: controlled input) are states controlled by user input (input, select, textarea)
- when setting states, never rely on current state, use setState((state, props) => ({counter:state.counter + 1}))
you can even remove props arg since it's useless here, so in short DONT RELY on
this.props or this.state TO UPDATE STATE
- can run json-server using 'npx json-server --port 3001 --watch db.jason
- dont use XMLHttpRequest for fetching, use fetch method
- npm install 'name' --save-dev: dev dependency
- in package.json, define script to run with npm run 'scriptname'

Axios:
- const promise = axios.get('route')

Promises:
- WHAT IS PROMISE? object representing the eventual completion or failure or async operation
- promise can be pending, fulfilled/resolved or rejected/fail
- to access result of operation represented by the promise, we must
make an event handler to the promise (then)
promise.then(reponse => {})
- response object as parameter contains all info on HTTP GET request (data, status code, headers)
- fetching THEN rendering component IS PROBLEMATIC, we should place fetching INSIDE App component
- the then() contains the event handler
- returns promise object, but can demand only certain attributes with
request.then(res => res.data) in service module (for accessing data)
- IMPORTANT IMPORTANT IMPORTANT: THEN METHOD OF A PROMISE ALSO RETURNS A PROMISE

Effect-hooks:
- Effect hooks lets you perform side effects on function components. Data fetching,
setting up a subscription, and manually changhing the DOM in React components for example
are side effects
- renders body first time w/ 0 data fetched => fetch data => update cause rerender
- effect takes 2 params: function and how often effect is run
- default run effect after component rendered, but we want only first render...
so we give second param an empty array [] => means only first render
- ALSO USED TO TRIGGER EFFECT (FUNCTIONS) WHEN ARRAY DEPENDENCY, ANY OF IT CHANGES
if empty array, only first render triggers
- if searching for substrings, cached regExp (new RegExp('word', 'i')) seems to be more fast in most browser,
else it's indexOf in chrome/edge

REST API:
- provides data for everyone in a machine-readable format

APIs:
- create env where variable name starts with REACT_APP_ to get recongnized
- import using process.env.

REST:
- individual data objects are ressources, we can have collection of ressources
- URL or route notes for collection and notes/3 where 3 id individual ressource
- get with HTTP GET requests
- add with HTTP POST where body is data, need also header for content-type
- *** SERVER GENERATES IDs
- TO MODIFY: HTTP PATCH request
- TO REPLACE: HTTP PUT request

Export default:
- export default { getAll: getAll, update: update } for getAll a function

Faster object definition, not to be confused with object spreading:
- let temp = {a:a,b:b} === {a,b} if key and values same